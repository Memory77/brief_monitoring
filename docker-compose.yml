version: "3.8"

services:
  api:
    build:
      context: . # indique que Docker recherche le Dockerfile dans le répertoire courant (/home/deborah/Bureau/brief_monitoring
    container_name: api
    ports:
      - "8000:8000"  # expose le port 8000 pour accéder à l'API
    volumes:
      - .:/app  # monte votre répertoire local dans le conteneur
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"  # Expose le tableau de bord Prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Monte votre fichier de configuration
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password@123
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

#ici, 0.0.0.0 fait écouter l'application sur toutes les interfaces réseau disponibles dans le conteneur.

#Cela inclut les connexions internes au conteneur, entre conteneurs, et depuis l'hôte (via le mappage de ports).
#C’est ce qui permet à Docker de rendre le service accessible depuis l'extérieur (via la machine hôte ou un autre conteneur).

#localhost : Fait écouter l'application uniquement sur l'interface locale du conteneur.

#Cela signifie que l'application sera accessible uniquement depuis l'intérieur du conteneur lui-même.
#Ni la machine hôte ni les autres conteneurs ne pourront y accéder.